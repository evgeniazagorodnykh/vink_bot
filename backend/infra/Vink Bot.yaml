openapi: 3.0.3
info:
  title: Vink Bot
  version: 0.0.1
paths:
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /conversations/:
    get:
      operationId: conversations_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - conversations
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConversationList'
          description: ''
    post:
      operationId: conversations_create
      tags:
      - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
  /conversations/{conversation_id}/messages/:
    get:
      operationId: conversations_messages_list
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - conversations
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
    post:
      operationId: conversations_messages_create
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /conversations/{conversation_id}/messages/{id}/:
    get:
      operationId: conversations_messages_retrieve
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сообщение.
        required: true
      tags:
      - conversations
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: conversations_messages_update
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сообщение.
        required: true
      tags:
      - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    patch:
      operationId: conversations_messages_partial_update
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сообщение.
        required: true
      tags:
      - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessageRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    delete:
      operationId: conversations_messages_destroy
      parameters:
      - in: path
        name: conversation_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сообщение.
        required: true
      tags:
      - conversations
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /conversations/{id}/:
    get:
      operationId: conversations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диалог.
        required: true
      tags:
      - conversations
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
    put:
      operationId: conversations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диалог.
        required: true
      tags:
      - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
    patch:
      operationId: conversations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диалог.
        required: true
      tags:
      - conversations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConversationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConversationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConversationRequest'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: ''
    delete:
      operationId: conversations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диалог.
        required: true
      tags:
      - conversations
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        token:
          type: string
          readOnly: true
          title: Токен
      required:
      - token
    AuthTokenRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
          title: Имя пользователя
        password:
          type: string
          writeOnly: true
          minLength: 1
          title: Пароль
      required:
      - password
      - username
    Conversation:
      type: object
      description: Сериализатор для диалогов.
      properties:
        id:
          type: integer
          readOnly: true
        archive:
          type: boolean
        created_at:
          type: string
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
        name:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 15
      required:
      - created_at
      - id
      - messages
      - phone
    ConversationRequest:
      type: object
      description: Сериализатор для диалогов.
      properties:
        archive:
          type: boolean
        name:
          type: string
          minLength: 1
          maxLength: 255
        phone:
          type: string
          minLength: 1
          maxLength: 15
      required:
      - phone
    Message:
      type: object
      description: Сериализатор для сообщений.
      properties:
        id:
          type: integer
          readOnly: true
        conversation:
          type: integer
          readOnly: true
        content:
          type: string
        is_from_user:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - conversation
      - created_at
      - id
    MessageRequest:
      type: object
      description: Сериализатор для сообщений.
      properties:
        content:
          type: string
          minLength: 1
        is_from_user:
          type: boolean
      required:
      - content
    PaginatedConversationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Conversation'
    PaginatedMessageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PatchedConversationRequest:
      type: object
      description: Сериализатор для диалогов.
      properties:
        archive:
          type: boolean
        name:
          type: string
          minLength: 1
          maxLength: 255
        phone:
          type: string
          minLength: 1
          maxLength: 15
    PatchedMessageRequest:
      type: object
      description: Сериализатор для сообщений.
      properties:
        content:
          type: string
          minLength: 1
        is_from_user:
          type: boolean
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: http://backend:8000/
